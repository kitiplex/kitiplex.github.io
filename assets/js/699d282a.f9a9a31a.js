"use strict";(self.webpackChunkkitiplex_dev_website=self.webpackChunkkitiplex_dev_website||[]).push([[4806],{59885:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>m,frontMatter:()=>a,metadata:()=>l,toc:()=>d});var i=t(74848),s=t(28453);const a={title:"How far are we?",sidebar_label:"Celestial distance",slug:"/celestial-dist"},r=void 0,l={id:"snippets/celestial-distance",title:"How far are we?",description:"In this example, we'll demonstrate the approximate distances of celestial bodies in light minutes.",source:"@site/docs/snippets/celestial-distance.mdx",sourceDirName:"snippets",slug:"/celestial-dist",permalink:"/docs/celestial-dist",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedBy:"mkeithX",lastUpdatedAt:1708809826e3,frontMatter:{title:"How far are we?",sidebar_label:"Celestial distance",slug:"/celestial-dist"},sidebar:"projectSidebar",previous:{title:"Live editor",permalink:"/docs/live-editor"},next:{title:"Common Commands",permalink:"/docs/cli-eggs"}},o={},d=[{value:"From Earth.",id:"from-earth",level:3},{value:"From the Sun.",id:"from-the-sun",level:3}];function c(e){const n={admonition:"admonition",code:"code",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["In this example, we'll demonstrate the ",(0,i.jsx)(n.strong,{children:"approximate distances"})," of celestial bodies in light minutes."]})}),"\n",(0,i.jsx)(n.admonition,{title:"Note",type:"tip",children:(0,i.jsx)(n.p,{children:"While the entire code is written in Python, the same principles can be applied to other programming languages as well."})}),"\n",(0,i.jsx)(n.h3,{id:"from-earth",children:"From Earth."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-py",children:"LIGHT_SPEED = 299792  # km/s\ndistances_from_earth = [\n    {'name': 'Sun', 'distance': 150000000},\n    {'name': 'Mercury', 'distance': 91691000},\n    {'name': 'Venus', 'distance': 41400000},\n    {'name': 'Moon', 'distance': 384402},\n    {'name': 'Mars', 'distance': 78340000},\n    {'name': 'Asteroid Belt', 'distance': 478700000},\n    {'name': 'Jupiter', 'distance': 628730000},\n    {'name': 'Saturn', 'distance': 1275000000},\n    {'name': 'Uranus', 'distance': 2723950000},\n    {'name': 'Neptune', 'distance': 4351400000},\n    {'name': 'Kuiper Belt', 'distance': 7330000000},\n    {'name': 'Oort Cloud', 'distance': 7479890000000},\n]\n\ndef to_light_minutes(distance):\n    light_minutes = distance / (LIGHT_SPEED * 60)\n    return round(light_minutes, 2)\n\ndef main():\n    print(\"Approximate distance from Earth (in Light Minutes):\")\n    print()\n\n    for planet in distances_from_earth:\n        name = planet['name']\n        distance = planet['distance']\n        light_minutes = to_light_minutes(distance)\n        print(f\"{name}: {light_minutes} light minutes\")\n\nif __name__ == \"__main__\":\n    main()\n"})}),"\n",(0,i.jsxs)(t,{children:[(0,i.jsx)("summary",{children:"Show output"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-md",children:"Approximate distance from Earth (in Light Minutes):\n\nSun: 8.34 light minutes\nMercury: 5.1 light minutes\nVenus: 2.3 light minutes\nMoon: 0.02 light minutes\nMars: 4.36 light minutes\nAsteroid Belt: 26.61 light minutes\nJupiter: 34.95 light minutes\nSaturn: 70.88 light minutes\nUranus: 151.44 light minutes\nNeptune: 241.91 light minutes\nKuiper Belt: 407.5 light minutes\nOort Cloud: 415837.76 light minutes\n"})})]}),"\n",(0,i.jsx)(n.h3,{id:"from-the-sun",children:"From the Sun."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-py",children:"LIGHT_SPEED = 299792\ndistances_from_sun = [\n    {'name': 'Mercury', 'distance': 57910000},\n    {'name': 'Venus', 'distance': 108200000},\n    {'name': 'Earth', 'distance': 149600000},\n    {'name': 'Mars', 'distance': 227900000},\n    {'name': 'Jupiter', 'distance': 778500000},\n    {'name': 'Saturn', 'distance': 1427000000},\n    {'name': 'Uranus', 'distance': 2871000000},\n    {'name': 'Neptune', 'distance': 4497000000},\n]\n\ndef to_minutes(distance):\n    return float(distance) / (LIGHT_SPEED * 60)\n\ndef main():\n    print(\"Approximate distance the Sun (in Light Minutes):\")\n    print()\n    for planet in distances_from_sun:\n        print(f\"{planet['name']}: {round(to_minutes(planet['distance']), 2)} light minutes\")\n\nif __name__ == \"__main__\":\n    main()\n"})}),"\n",(0,i.jsxs)(t,{children:[(0,i.jsx)("summary",{children:"Show output"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-md",children:"Approximate distance the Sun (in Light Minutes):\n\nMercury: 3.22 light minutes\nVenus: 6.02 light minutes\nEarth: 8.32 light minutes\nMars: 12.67 light minutes\nJupiter: 43.28 light minutes\nSaturn: 79.33 light minutes\nUranus: 159.61 light minutes\nNeptune: 250.01 light minutes\n"})})]}),"\n",(0,i.jsx)(n.admonition,{title:"Fun fact",type:"tip",children:(0,i.jsx)(n.p,{children:"Great! Now that we've learned how to code basic calculations, we've also discovered that we are actually looking back in time."})})]})}function m(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>l});var i=t(96540);const s={},a=i.createContext(s);function r(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);